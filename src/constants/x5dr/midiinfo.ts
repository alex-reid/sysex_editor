import displayNumberAsHex from "../../utils/displayNumberAsHex";

const MAX_PARAMETER_VALUE = 0x4000;
const MAX_PARAMETER_RECEIVE_VALUE = 0xff;

const MODE_DATA = {
  0x00: "COMBINATION",
  0x01: "COMBI EDIT",
  0x02: "PROGRAM",
  0x03: "PROG EDIT",
  0x04: "MULTI",
  0x05: "GLOBAL",
};

const FUNCTION_CODE_RECEIVED = {
  0x42: "MODE DATA",
  0x4e: "MODE CHANGE",
  0x41: "PARAMETER CHANGE",
  0x53: "DRUMKIT PARAMETER CHANGE",
  0x40: "PROGRAM PARAMETER DUMP",
  0x4c: "ALL PROGRAM PARAMETER DUMP",
  0x49: "COMBINATION PARAMETER DUMP",
  0x4d: "ALL COMBINATION PARAMETER DUMP",
  0x55: "MULTI SETUP DATA DUMP",
  0x68: "MULTI SETUP DATA (Exp) DUMP",
  0x51: "GLOBAL DATA DUMP",
  0x52: "DRUMS DATA DUMP",
  0x50: "ALL DATA (GLOBAL, DRUMS, COMBI, PROG, MULTI) DUMP",
  0x26: "RECEIVED MESSAGE FORMAT ERROR",
  0x23: "DATA LOAD COMPLETED (ACK)",
  0x24: "DATA LOAD ERROR (NAK)",
  0x21: "WRITE COMPLETED",
  0x22: "WRITE ERROR",
};

const FUNCTION_CODE_SEND = {
  MODE_REQUEST: 0x12,
  PROGRAM_PARAMETER_DUMP_REQUEST: 0x10,
  ALL_PROGRAM_PARAMETER_DUMP_REQUEST: 0x1c,
  COMBINATION_PARAMETER_DUMP_REQUEST: 0x19,
  ALL_COMBINATION_PARAMETER_DUMP_REQUEST: 0x1d,
  MULTI_SETUP_DATA_DUMP_REQUEST: 0x06,
  MULTI_SETUP_DATA_EXP_DUMP_REQUEST: 0x33,
  GLOBAL_DATA_DUMP_REQUEST: 0x0e,
  DRUMS_DATA_DUMP_REQUEST: 0x0d,
  ALL_DATA_DUMP_REQUEST: 0x0f,
  PROGRAM_WRITE_REQUEST: 0x11,
  COMBINATION_WRITE_REQUEST: 0x1a,
  PROGRAM_PARAMETER_DUMP: 0x40,
  ALL_PROGRAM_PARAMETER_DUMP: 0x4c,
  COMBINATION_PARAMETER_DUMP: 0x49,
  ALL_COMBINATION_PARAMETER_DUMP: 0x4d,
  MULTI_SETUP_DATA_DUMP: 0x55,
  MULTI_SETUP_DATA_EXP_DUMP: 0x68,
  GLOBAL_DATA_DUMP: 0x51,
  DRUMS_DATA_DUMP: 0x52,
  ALL_DATA_DUMP: 0x50,
  MODE_CHANGE: 0x4e,
  PARAMETER_CHANGE: 0x41,
  DRUM_KIT_PARAMETER_CHANGE: 0x53,
};

const PROGRAM_EDIT_PARAMETER = {
  // oscillator
  OSC_MODE: 0,
  ASSIGN: 1,
  HOLD: 2,
  //pitch eg
  PITCH_EG_START_LEVEL: 3,
  PITCH_EG_ATTACK_TIME: 4,
  PITCH_EG_ATTACK_LEVEL: 5,
  PITCH_EG_DECAY_TIME: 6,
  PITCH_EG_RELEASE_TIME: 7,
  PITCH_EG_RELEASE_LEVEL: 8,
  PITCH_EG_EG_INT_BY_VEL_SENSE: 9,
  PITCH_EG_EG_TIME_BY_VEL_SENSE: 10,
  // cutoff mg
  CUTOFF_MG_WAVE_FORM: 11,
  CUTOFF_MG_FREQUENCY: 12,
  CUTOFF_MG_INTENSITY: 13,
  CUTOFF_MG_DELAY: 14,
  CUTOFF_MG_OSC_SELECT: 15,
  CUTOFF_MG_KEY_SYNC: 16,
  // after touch
  AT_PITCH_BEND_RANGE: 17,
  AT_VDF_CUTOFF: 18,
  AT_VDF_MG_INT: 19,
  AT_VDA_AMPLITUDE: 20,
  // bend wheel, mod wheel
  BW_MW_VDF_MG_INT: 21,
  BW_MW_PITCH_BEND_RANGE: 22,
  BW_MW_VDF_SWEEP_INT: 23,

  VOICE_1: {
    //OSC
    OSC: {
      MULTISOUND: 24,
      LEVEL: 25,
      OCTAVE: 26,
      PITCH_EG_INT: 27,
      A_B_PAN: 28,
      SEND_C_LEVEL: 29,
      SEND_D_LEVEL: 30,
      // OSC PITCH MG
      PITCH_MG_WAVE_FORM: 78,
      PITCH_MG_FREQUENCY: 79,
      PITCH_MG_INTENSITY_2: 80,
      PITCH_MG_DELAY: 81,
      PITCH_MG_PADE_IN: 82,
      PITCH_MG_KEY_SYNC: 83,
      PITCH_MG_FREQ_MOD_BY_KBD_TRACK: 84,
      PITCH_MG_FREQ_MOD_BY_AT_M_WHEEL: 85,
      PITCH_MG_INTENSITY_MOD_BY_AT: 86,
      PITCH_MG_INTENSITY_MOD_BY_M_WHEEL: 87,
    },
    // VDF
    VDF: {
      CUTOFF_VALUE: 31,
      EG_INTENSITY: 32,

      // colour 1
      COL_INTENSITY: 33,
      COL_INT_BY_VEL_SENSE: 34,

      // vdf eg
      EG_ATTACK_TIME: 35,
      EG_ATTACK_LEVEL: 36,
      EG_DECAY_TIME: 37,
      EG_BREAK_POINT: 38,
      EG_SLOPE_TIME: 39,
      EG_SUSTAIN_LEVEL: 40,
      EG_RELEASE_TIME: 41,
      EG_RELEASE_LEVEL: 42,
      EG_EG_INT_BY_VEL_SENSE: 43,
      EG_EG_TIME_BY_VEL_SENSE: 44,

      // -- VDF EG TIME MOD BY VEL SENSE
      EG_TIME_MOD_ATTACK_TIME: 45,
      EG_TIME_MOD_DECAY_TIME: 46,
      EG_TIME_MOD_SLOPE_TIME: 47,
      EG_TIME_MOD_RELEASE_TIME: 48,

      // -- VDF KBD TRACK
      KBD_TRACK_KBD_TRACK_KEY: 49,
      KBD_TRACK_MODE: 50,
      KBD_TRACK_CUTOFF: 51,
      KBD_TRACK_EG_TIME: 52,

      // -- VDA EG TIME MOD BY KBD TRACK
      KBD_TRAK_TIME_MOD_ATTACK_TIME: 53,
      KBD_TRAK_TIME_MOD_DECAY_TIME: 54,
      KBD_TRAK_TIME_MOD_SLOPE_TIME: 55,
      KBD_TRAK_TIME_MOD_RELEASE_TIME: 56,
    },
    VDA: {
      // -- VDA EG
      EG_ATTACK_TIME: 57,
      EG_ATTACK_LEVEL: 58,
      EG_DECAY_TIME: 59,
      EG_BREAK_POINT: 60,
      EG_SLOPE_TIME: 61,
      EG_SUSTAIN_LEVEL: 62,
      EG_RELEASE_TIME: 63,
      EG_EG_INT_BY_VEL_SENSE: 64,
      EG_EG_TIME_BY_VEL_SENSE: 65,
      // -- VDA EG TIME MOD BY VEL SENSE
      EG_TIME_MOD_ATTACK_TIME: 66,
      EG_TIME_MOD_DECAY_TIME: 67,
      EG_TIME_MOD_SLOPE_TIME: 68,
      EG_TIME_MOD_RELEASE_TIME: 69,
      // -- VDA XBD TRACK
      KBD_TRACK_KBD_TRACK_KEY: 70,
      KBD_TRACK_MODE: 71,
      KBD_TRACK_INTENSITY: 72,
      KBD_TRACK_EG_TIME: 73,
      // -- VDA EG TIME MOD BY KBD TRACK
      EG_TIME_MOD_KBD_TRACK_ATTACK_TIME: 74,
      EG_TIME_MOD_KBD_TRACK_DECAY_TIME: 75,
      EG_TIME_MOD_KBD_TRACK_SLOPE_TIME: 76,
      EG_TIME_MOD_KBD_TRACK_RELEASE_TIME: 77,
    },
  },
  VOICE_2: {
    //OSC
    OSC: {
      INTERVAL: 88,
      DETUNE: 89,
      DELAY_START: 90,
      MULTISOUND: 91, // 91 (+67)
      LEVEL: 92,
      OCTAVE: 93,
      PITCH_EG_INT: 94,
      A_B_PAN: 95,
      SEND_C_LEVEL: 96,
      SEND_D_LEVEL: 97,
      // OSC PITCH MG
      PITCH_MG_WAVE_FORM: 145,
      PITCH_MG_FREQUENCY: 146,
      PITCH_MG_INTENSITY_2: 147,
      PITCH_MG_DELAY: 148,
      PITCH_MG_PADE_IN: 149,
      PITCH_MG_KEY_SYNC: 150,
      PITCH_MG_FREQ_MOD_BY_KBD_TRACK: 151,
      PITCH_MG_FREQ_MOD_BY_AT_M_WHEEL: 152,
      PITCH_MG_INTENSITY_MOD_BY_AT: 153,
      PITCH_MG_INTENSITY_MOD_BY_M_WHEEL: 154,
    },
    // VDF
    VDF: {
      CUTOFF_VALUE: 98,
      EG_INTENSITY: 99,

      // colour 1
      COL_INTENSITY: 100,
      COL_INT_BY_VEL_SENSE: 101,

      // vdf eg
      EG_ATTACK_TIME: 102,
      EG_ATTACK_LEVEL: 103,
      EG_DECAY_TIME: 104,
      EG_BREAK_POINT: 105,
      EG_SLOPE_TIME: 106,
      EG_SUSTAIN_LEVEL: 107,
      EG_RELEASE_TIME: 108,
      EG_RELEASE_LEVEL: 109,
      EG_EG_INT_BY_VEL_SENSE: 110,
      EG_EG_TIME_BY_VEL_SENSE: 111,

      // -- VDF EG TIME MOD BY VEL SENSE
      EG_TIME_MOD_ATTACK_TIME: 112,
      EG_TIME_MOD_DECAY_TIME: 113,
      EG_TIME_MOD_SLOPE_TIME: 114,
      EG_TIME_MOD_RELEASE_TIME: 115,

      // -- VDF KBD TRACK
      KBD_TRACK_KBD_TRACK_KEY: 116,
      KBD_TRACK_MODE: 117,
      KBD_TRACK_CUTOFF: 118,
      KBD_TRACK_EG_TIME: 119,

      // -- VDA EG TIME MOD BY KBD TRACK
      KBD_TRAK_TIME_MOD_ATTACK_TIME: 120,
      KBD_TRAK_TIME_MOD_DECAY_TIME: 121,
      KBD_TRAK_TIME_MOD_SLOPE_TIME: 122,
      KBD_TRAK_TIME_MOD_RELEASE_TIME: 123,
    },
    VDA: {
      // -- VDA EG
      EG_ATTACK_TIME: 124,
      EG_ATTACK_LEVEL: 125,
      EG_DECAY_TIME: 126,
      EG_BREAK_POINT: 127,
      EG_SLOPE_TIME: 128,
      EG_SUSTAIN_LEVEL: 129,
      EG_RELEASE_TIME: 130,
      EG_EG_INT_BY_VEL_SENSE: 131,
      EG_EG_TIME_BY_VEL_SENSE: 132,
      // -- VDA EG TIME MOD BY VEL SENSE
      EG_TIME_MOD_ATTACK_TIME: 133,
      EG_TIME_MOD_DECAY_TIME: 134,
      EG_TIME_MOD_SLOPE_TIME: 135,
      EG_TIME_MOD_RELEASE_TIME: 136,
      // -- VDA XBD TRACK
      KBD_TRACK_KBD_TRACK_KEY: 137,
      KBD_TRACK_MODE: 138,
      KBD_TRACK_INTENSITY: 139,
      KBD_TRACK_EG_TIME: 140,
      // -- VDA EG TIME MOD BY KBD TRACK
      EG_TIME_MOD_KBD_TRACK_ATTACK_TIME: 141,
      EG_TIME_MOD_KBD_TRACK_DECAY_TIME: 142,
      EG_TIME_MOD_KBD_TRACK_SLOPE_TIME: 143,
      EG_TIME_MOD_KBD_TRACK_RELEASE_TIME: 144,
    },
  },
};

const debugFunctionData = (functionCode: number, data: number[]) => {
  let debugData = displayNumberAsHex(functionCode) + ": ";
  switch (functionCode) {
    case 0x42: // MODE DATA
      debugData += `MODE DATA - Mode: ${
        MODE_DATA[data[0] as 0 | 1 | 2 | 3 | 4 | 5]
      }`;
      break;
    case 0x4e: // MODE CHANGE
      debugData += `MODE CHANGE - Mode: ${
        MODE_DATA[data[0] as 0 | 1 | 2 | 3 | 4 | 5]
      }`;
      break;
    case 0x41: // PARAMETER CHANGE
      debugData += "PARAMETER CHANGE";
      break;
    case 0x53: // DRUMKIT PARAMETER CHANGE
      debugData += "DRUMKIT PARAMETER CHANGE";
      break;
    case 0x40: // PROGRAM PARAMETER DUMP
      debugData += "PROGRAM PARAMETER DUMP";
      break;
    case 0x4c: // ALL PROGRAM PARAMETER DUMP
      debugData += "ALL PROGRAM PARAMETER DUMP";
      break;
    case 0x49: // COMBINATION PARAMETER DUMP
      debugData += "COMBINATION PARAMETER DUMP";
      break;
    case 0x4d: // ALL COMBINATION PARAMETER DUMP
      debugData += "ALL COMBINATION PARAMETER DUMP";
      break;
    case 0x55: // MULTI SETUP DATA DUMP
      debugData += "MULTI SETUP DATA DUMP";
      break;
    case 0x68: // MULTI SETUP DATA (Exp) DUMP
      debugData += "MULTI SETUP DATA (Exp) DUMP";
      break;
    case 0x51: // GLOBAL DATA DUMP
      debugData += "GLOBAL DATA DUMP";
      break;
    case 0x52: // DRUMS DATA DUMP
      debugData += "DRUMS DATA DUMP";
      break;
    case 0x50: // ALL DATA (GLOBAL, DRUMS, COMBI, PROG, MULTI) DUMP
      debugData += "ALL DATA (GLOBAL, DRUMS, COMBI, PROG, MULTI) DUMP";
      break;
    case 0x26: // RECEIVED MESSAGE FORMAT ERROR
      debugData += "RECEIVED MESSAGE FORMAT ERROR";
      break;
    case 0x23: // DATA LOAD COMPLETED (ACK)
      debugData += "DATA LOAD COMPLETED (ACK)";
      break;
    case 0x24: // DATA LOAD ERROR (NAK)
      debugData += "DATA LOAD ERROR (NAK)";
      break;
    case 0x21: // WRITE COMPLETED
      debugData += "WRITE COMPLETED";
      break;
    case 0x22: // WRITE ERROR
      debugData += "WRITE ERROR";
      break;
    default:
      debugData = "mode not recognised";
  }
  console.log(debugData, data);
};

export {
  MODE_DATA,
  FUNCTION_CODE_RECEIVED,
  FUNCTION_CODE_SEND,
  PROGRAM_EDIT_PARAMETER,
  debugFunctionData,
  MAX_PARAMETER_VALUE,
  MAX_PARAMETER_RECEIVE_VALUE,
};
